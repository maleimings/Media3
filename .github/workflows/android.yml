name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Decode Keystore
      env:
       ENCODED_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
       SIGNING_KEY_STORE_PATH: ${{ vars.SIGNING_KEY_STORE_PATH }}
      
      run: |
       echo $ENCODED_STRING > keystore-b64.txt
       base64 -d keystore-b64.txt > $SIGNING_KEY_STORE_PATH

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew assembleRelease

    - name: Upload release APK
      uses: actions/upload-artifact@v3
      with:
        name: Release artifact
        path: app/build/outputs/apk/release/*.apk

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: newtag
        release_name: Automatic Release
        draft: false
        prerelease: true

    - name: Upload APK to Release
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: app/build/outputs/apk/release/*.apk
        asset_content_type: application/zip
